//
//  Contours.cpp
//  Coreplot-Contours
//
//  Created by Steve Wainwright on 01/01/2021.
//

#include "Contours.h"

using namespace COREPLOT_CONTOURS;

////////////////////////////////////////////////////////////////////////////
// CContours initialisation

CContours::CContours() {
    noPlanes = NOPLANES;
    pLimits[0] = pLimits[2] = 0.0;
    pLimits[1] = pLimits[3] = 5.0;
    
    this->p_listContour = new CListContour;
}

CContours::CContours(const int noPlanes, double vPlanes[], double limits[]) {
    this->noPlanes = noPlanes;
    for(int i =0; i < 4; i++) {
        //assert(limits[i]);
        this->pLimits[i] = limits[i];
    }
    std::vector<double> m_vPlanes;
    m_vPlanes.resize(noPlanes);
    for(int i = 0; i < noPlanes; i++) {
        m_vPlanes[i] = vPlanes[i];
    }
    this->p_listContour = new CListContour(noPlanes, m_vPlanes, this->pLimits);
}


////////////////////////////////////////////////////////////////////////////
// CContours initialisation
CContours::~CContours() {
    if(this->p_listContour != NULL) {
        delete this->p_listContour;
    }
}

////////////////////////////////////////////////////////////////////////////
// CContours commands

void CContours::generate() {
    // Plotting strip generated by CLineStripList
    // generating info
    assert(p_listContour);
    p_listContour->SetNoIsoCurves(this->noPlanes);
    p_listContour->Generate();
}

void CContours::setFieldFunction(double (*_pFieldFcn)(double, double)) {
    assert(p_listContour);
    p_listContour->SetFieldFcn(_pFieldFcn);
}

void CContours::setFieldBlock(double (^_pFieldBlk)(double x, double y)) {
    assert(p_listContour);
    p_listContour->SetFieldBlk(_pFieldBlk);
}

void CContours::setLimits(double pLimits[]) {
    assert(p_listContour);
    p_listContour->SetLimits(pLimits);
}

void CContours::getLimits(double pLimits[]) {
    assert(p_listContour);
    p_listContour->GetLimits(pLimits);
}

unsigned int CContours::getNPlanes() {
    assert(p_listContour);
    return p_listContour->GetNPlanes();
}

double CContours::getPlane(unsigned int i) {
    assert(p_listContour);
    return p_listContour->GetPlane(i);
}

void CContours::setNoIsoCurves(unsigned int number) {
    assert(p_listContour);
    this->noPlanes = number;
    p_listContour->SetNoIsoCurves(number);
}

void CContours::dumpPlane(unsigned int iPlane) {
    assert(p_listContour);
    p_listContour->DumpPlane(iPlane);
}
